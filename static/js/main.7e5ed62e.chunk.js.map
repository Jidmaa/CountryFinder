{"version":3,"sources":["index.js"],"names":["SearchCountries","searchedCountry","shownCountries","useState","top","margin","transform","open","setOpen","handleOpen","stylesCountry","media","height","width","onClick","component","image","flag","style","gutterBottom","variant","name","capital","population","showCountry","onClose","aria-labelledby","aria-describedby","display","alignItems","justifyContent","container","direction","spacing","item","region","languages","map","language","currencies","currency","App","useEffect","axios","get","then","response","setCountries","data","countries","setSearchedCountry","slice","console","log","position","href","id","options","getOptionLabel","option","renderInput","params","label","onChange","event","country","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e5ed62e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GithubCorner from 'react-github-corner';\nimport axios from \"axios\";\nimport {\n  TextField,\n  Container,\n  ListItem,\n  Typography,\n  Card,\n  CardMedia,\n  CardActionArea,\n  Toolbar,\n  Grid,\n  CardContent,\n  AppBar,\n  Box,\n  Modal,\n  Paper,\n  List,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport \"fontsource-roboto\";\nconst SearchCountries = ({ searchedCountry, shownCountries }) => {\n  function getModalStyle() {\n    const top = 30;\n    const left = 25;\n\n    return {\n      top: `${top}%`,\n      margin: \"auto\",\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  const [modalStyle] = useState(getModalStyle);\n  const showCountry = (searchedCountry) => (\n    <Card>\n      <CardActionArea onClick={() => handleOpen()}>\n        <CardMedia\n          component=\"img\"\n          image={searchedCountry.flag}\n          width=\"50\"\n          height=\"30\"\n          style={stylesCountry.media}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            {searchedCountry.name}\n          </Typography>\n          <Typography variant=\"h5\">\n            Capital :\n            <Typography variant=\"h6\">{searchedCountry.capital}</Typography>\n          </Typography>\n          <br />\n          <Typography variant=\"h5\">\n            Population :\n            <Typography variant=\"h6\">{searchedCountry.population}</Typography>\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const styles = {\n    media: {\n      height: 450,\n      width: 650,\n    },\n  };\n  const stylesCountry = {\n    media: {\n      height: 300,\n      width: 500,\n    },\n  };\n \n  if (searchedCountry)\n    return (\n      <>\n        {showCountry(searchedCountry)}\n        <div>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Card>\n              <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\n                <Grid item>\n                  <Card>\n                    <CardMedia\n                      component=\"img\"\n                      image={searchedCountry.flag}\n                      style={styles.media}\n                    ></CardMedia>\n                  </Card>\n                </Grid>\n                <Grid item>\n                  <Card>\n                    <Typography variant=\"h2\">{searchedCountry.name}</Typography>\n                    <Typography variant=\"h5\">\n                      Capital : {searchedCountry.capital}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                      Population : {searchedCountry.population}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                      Region : {searchedCountry.region}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                      <List>\n                        Language(s) :\n                        {searchedCountry.languages.map((language) => (\n                          <ListItem> {language.name} </ListItem>\n                        ))}\n                      </List>\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      <List>\n                      Currencie(s) :\n                      {searchedCountry.currencies.map(\n                        (currency) => <ListItem>{currency.name} </ListItem>\n                      )}\n                      </List>\n                    </Typography>\n                  </Card>\n                </Grid>\n              </Grid>\n            </Card>\n          </Modal>\n        </div>\n      </>\n    );\n\n};\nconst App = () => {\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((response) => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const [countries, setCountries] = useState([]);\n  const [searchedCountry, setSearchedCountry] = useState(\"\");\n\n  const shownCountries = countries.slice(0, 8);\n  return (\n    <>\n      \n      {console.log(shownCountries)}\n      <AppBar position=\"static\" >\n     \n        <Toolbar>\n          <Typography variant=\"h4\"> Country Finder </Typography>\n        </Toolbar>\n      </AppBar>\n      <GithubCorner href=\"https://github.com/Jidmaa/CountryFinder\" />\n      <br />\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={5}>\n        <Grid item>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={countries}\n            getOptionLabel={(option) => option.name}\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Choose a country ! \"\n                variant=\"outlined\"\n              />\n            )}\n            onChange={(event, country) => setSearchedCountry(country)}\n          />\n        </Grid>\n\n        <Grid item>\n       {searchedCountry &&   <SearchCountries\n            searchedCountry={searchedCountry}\n            shownCountries={shownCountries}\n          />}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}